/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Material as PrismaMaterial } from "@prisma/client";

export class MaterialServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MaterialCountArgs, "select">): Promise<number> {
    return this.prisma.material.count(args);
  }

  async materials(
    args: Prisma.MaterialFindManyArgs
  ): Promise<PrismaMaterial[]> {
    return this.prisma.material.findMany(args);
  }
  async material(
    args: Prisma.MaterialFindUniqueArgs
  ): Promise<PrismaMaterial | null> {
    return this.prisma.material.findUnique(args);
  }
  async createMaterial(
    args: Prisma.MaterialCreateArgs
  ): Promise<PrismaMaterial> {
    return this.prisma.material.create(args);
  }
  async updateMaterial(
    args: Prisma.MaterialUpdateArgs
  ): Promise<PrismaMaterial> {
    return this.prisma.material.update(args);
  }
  async deleteMaterial(
    args: Prisma.MaterialDeleteArgs
  ): Promise<PrismaMaterial> {
    return this.prisma.material.delete(args);
  }
}
